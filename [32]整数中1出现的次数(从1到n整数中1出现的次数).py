# -*- coding: utf-8 -*-
'''
求出1~13的整数中1出现的次数,并算出100~1300的整数中1出现的次数？为此他特别数了一下1~13中包含1的数字有1、10、11、12、13因此共出现6次,但是对于后面问题他就没辙了。ACMer希望你们帮帮他,并把问题更加普遍化,可以很快的求出任意非负整数区间中1出现的次数（从1 到 n 中1出现的次数）。
'''
import math

def number1Count(n):
    if n < 1:
        return 0
    digit = int(math.log10(n)) + 1
    count = 0
    for i in range(digit):
        high = n // 10**(i+1)
        count += high * 10**i
        d = (n % 10**(i+1)) // 10**i
        if d == 1:
            low = n % 10**i
            count += low + 1
        elif d > 1:
            count += 10**i
    return count


'''
思路：如43132，对于第2位（从右往左,从0开始）来说，出现1的次数分为两部分计算。一部分是0~42999，此时第2位上出现1的次数为43*10^2；另一部分是43000~43132，此时若第2位为0，则出现1的次数为0；若为1，则出现次数为32+1=33（即低位部分的数值+1）,若大于1，则出现次数为10^2=100。将两部分相加，便是该位在1~n中1出现的次数。依次计算其他各位。
边界：0,1,2,10,11,12,20,21,22
'''
print('输入：%s，输出：%s，答案：%s' % (0, number1Count(0), 0))
print('输入：%s，输出：%s，答案：%s' % (1, number1Count(1), 1))
print('输入：%s，输出：%s，答案：%s' % (2, number1Count(2), 1))
print('输入：%s，输出：%s，答案：%s' % (10, number1Count(10), 2))
print('输入：%s，输出：%s，答案：%s' % (11, number1Count(11), 4))
print('输入：%s，输出：%s，答案：%s' % (12, number1Count(12), 5))
print('输入：%s，输出：%s，答案：%s' % (20, number1Count(20), 12))
print('输入：%s，输出：%s，答案：%s' % (21, number1Count(21), 13))
print('输入：%s，输出：%s，答案：%s' % (22, number1Count(22), 13))
